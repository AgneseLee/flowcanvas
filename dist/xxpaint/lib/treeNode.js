"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var TreeNode=function(){function h(e){_classCallCheck(this,h),this.children=e||[],this.parent=null,this.root=null,this.pre=null,this.next=null}return _createClass(h,[{key:"hasChildren",value:function(){return!(!Array.isArray(this.children)||!this.children.length)}},{key:"_getChildren",value:function(){return this.hasChildren()?this.children:[]}},{key:"_setParent",value:function(e){this.parent=e,this.root=e.root}},{key:"_setSibling",value:function(e,t){this.pre=e||null,this.next=t||null}},{key:"appendChild",value:function(e){if(!e instanceof h)throw Error("Unknown treeNode type");var t=this._getChildren()[this._getChildren().length-1];t&&t._setSibling(t.pre,e),this.children.push(e),e._setParent(this),e._setSibling(t,null)}},{key:"prependChild",value:function(e){if(!e instanceof h)throw Error("Unknown treeNode type");var t=this._getChildren()[0];t&&t._setSibling(e,t.next),this.children.unshift(e),e._setParent(this),e._setSibling(null,t)}},{key:"removeChild",value:function(e){if(!e instanceof h)throw Error("Unknown treeNode type");var t=this._getChildren().indexOf(e);if(t<0)throw Error("treeNode must be the child of parent");var n=this._getChildren()[t-1],e=this._getChildren()[t+1];n&&n._setSibling(n.pre,e),e&&e._setSibling(n,e.next),this.children.splice(t,1)}},{key:"remove",value:function(){if(!this.parent)throw Error("Can not remove root node");this.parent.removeChild(this)}},{key:"append",value:function(n){var r=this;if(!n instanceof h)throw Error("Unknown treeNode type");if(!this.parent)throw Error("Can not add treeNode to root level!");var i=[];n._setParent(this.parent),this.parent.children.forEach(function(e,t){i.push(e),e===r&&(n._setSibling(e,r.parent.children[t+1]),i.push(n))}),this.parent.children=i}},{key:"prepend",value:function(e){if(!e instanceof h)throw Error("Unknown treeNode type");if(!this.parent)throw Error("Can not add treeNode to root level!");var t=[];e._setParent(this.parent);for(var n=this.parent.children.length-1;0<=n;n--)t.unshift(this.parent.children[n]),this.parent.children[n]===this&&(e._setSibling(this.parent.children[n-1],this.parent.children[n]),t.unshift(e));this.parent.children=t}}],[{key:"connectChildren",value:function(n){n.hasChildren()&&(n.children=n.children.filter(function(e){return e instanceof h}),n._getChildren().map(function(e,t){e._setParent(n),e._setSibling(n._getChildren()[t-1],n._getChildren()[t+1]),h.connectChildren(e)}))}}]),h}();exports.default=TreeNode;